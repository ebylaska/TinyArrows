#!/usr/bin/python

import sys,os,time,urllib2,getopt,subprocess
from math import *


############## machine parameters #########################
jmol      = "/srv/arrows/bin/jmol-spt "
wrkdir    = "/srv/arrows/Projects/Work"
############## machine parameters #########################

def evalnum(s):
   try:
      return int(s)
   except ValueError:
      return float(s)


############################# main program ###################################
usage = \
"""
Remote chemdb_cube2jvxl program

  Usage: chemdb_cube2jvxl -h help cubefile smallcubefile jvxlfile

  -h prints this message

"""

print "chemdb_cube2jvxl"
tt      = time.localtime()

largeimage = False
opts, args = getopt.getopt(sys.argv[1:], "h")
for o, a in opts:
  if o in ("-h","--help"):
    print usage
    exit()

if (len(args)<3): 
   print usage
   exit()

cubefile      = args[0]
smallcubefile = args[1]
jvxlfile      = args[2]


with open(cubefile,'r') as ff:
   cubedata = ff.read()

cubedatalist = cubedata.split('\n')
print "jjj=",cubedatalist[2].split()[0]
nion = abs(evalnum(cubedatalist[2].split()[0]))
print "nion=",nion
smallcubedata = '\n'.join(cubedatalist[:nion+6])

with open(smallcubefile,'w') as ff:
   ff.write('\n'.join(cubedatalist[:nion+6])+'\n')

sfilename = wrkdir+"/tmpjmolscript.spt"
try:
   
   ttt = 'load %s; isosurface sign cutoff 0.05 "%s" translucent;\n' % (cubefile,cubefile)
   ttt += 'write isosurface "%s"\n' % (jvxlfile)

   with open(sfilename,"w") as ff: ff.write(ttt)
   cmd6 = jmol + sfilename
   print "HELLO=",cmd6
   try:
      result1 = subprocess.check_output("/usr/bin/timeout 20 " + cmd6,shell=True)
   except:
      print "Attempt 1 failed, trying 40 second timeout"
      try:
         result2 = subprocess.check_output("/usr/bin/timeout 40 " + cmd6,shell=True)
      except:
         print "Attempt 2 failed, trying 80 second timeout"
         try:
            result3 = subprocess.check_output("/usr/bin/timeout 80 " + cmd6,shell=True)
         except:
            print "Attempt 3 failed, trying 160 second timeout"
            try:
               result4 = subprocess.check_output("/usr/bin/timeout 160 " + cmd6,shell=True)
            except:
               print "JMOL Failed to create JVXL"
               print "chemdb_cube2jvxlfile: generation not successful"
               exit()
except:
   foundfiles = False




